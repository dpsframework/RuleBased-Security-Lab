import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import jade.core.AID;
import jade.core.Agent;
import jade.domain.FIPANames;
import jade.lang.acl.ACLMessage;
import jade.proto.SimpleAchieveREInitiator;

public class SudokuREInitiator extends SimpleAchieveREInitiator {

	public SudokuREInitiator(Agent a, ACLMessage msg) {
		super(a, msg);
	}

	public ACLMessage makePuzzleREQUEST( String puzzleUNC, String agentSolver ) {
		
		
		File puzzle 			= new File( puzzleUNC );
		if ( !puzzle.exists()) {	return null;		}
		
		String nameOfPuzzle 	= puzzle.getName();
		ACLMessage msg 			= new ACLMessage( ACLMessage.REQUEST);
		
	   	try {
	   		FileInputStream 	fis;
	   		fis 				= new FileInputStream(puzzle);
	   		int byteLength 		= (int) puzzle.length();
	   		byte[] fileContent 	= new byte[byteLength];
	   		fis.read(fileContent, 0, byteLength);
	   		msg.setByteSequenceContent(fileContent);
	   		fis.close();
	   		msg.setEncoding(    FIPANames.ACLCodec.BITEFFICIENT			);
	    	msg.setLanguage(	FIPANames.ContentLanguage.FIPA_SL		);
	    	 
	   	} catch (IOException e) {
	    	msg.setEncoding(	FIPANames.ACLCodec.STRING	    );
	   		msg.setContent ( 	nameOfPuzzle + ": not found!"   );
	   	}	
		

	    AID solver 				= new AID( agentSolver, AID.ISLOCALNAME);
	    msg.addReceiver		(  	solver                      );
	    msg.setSender		(  	myAgent.getAID()            );
	    msg.setReplyWith(		"SudokuPuzzlesRequest" 		);
	    msg.addUserDefinedParameter( "nameOfPuzzle", nameOfPuzzle);
	    return msg;
	}
}